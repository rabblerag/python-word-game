# ------------------------------------
# Ο βασικός κώδικας του παιχνιδιού
# ------------------------------------

# Οι βιβλιοθήκες που χρειάζονται για τη λειτουργία του παιχνιδιού
import enchant
import random
import string
import itertools
import time


oops=pyglet.media.load('Sad_Trombone.wav',streaming=False)
wins=pyglet.media.load('win.wav',streaming=False)


old_words = []
letters = []   
score = 0 
vowels = ['a','e','i','o','u']  # Μια λίστα με τα φωνίεντα του αγγλικού αλφάβητου με σκοπό κάθε φορά το πρόγραμμα να διαλέγει οτυλάχιστον ένα από αυτά
Dictionary = enchant.Dict("en_US") # Το αγγλικό λεξιλόγιο που χρεισημοποιείται για τον έλεγχο των λέξεων
player_start = int(input('1 to play, 2 to quit\n')) 


# Αυτή η συνάρτηση καλείται για να εμφανίσει μία νέα ακολουθία γραμμάτων
def get_letters():
     count = 0
     old_letters = []
     global multiplier
     multiplier = 1
     n = random.randint(4,9)
     for _ in itertools.repeat(None, n):
          new_letter = random.choice(string.ascii_lowercase)
          if new_letter in old_letters:
               count = count =+ 1
               if count >= 2:
                    continue
          else:
               old_letters.append(new_letter)
               letters.append(new_letter)
     letters.append(random.choice(vowels))
     print(letters)

# Αυτή η συνάρτηση καλείται για να ελέγξει αν η λέξη που έδωσε ο παίκτης αποτελείται από τα γράμματα που του έχουν δωθεί
def check_letters():
     if time.time() - start > 60: # Όταν έχουν περάσει 60 δευτερόλεπτα το παιχνίδι τελειώνει
         print('Τέλος χρόνου')
         end()
     elif len(word) == 1:
          print('Δώσε μία λέξη')
     else:
          if all(letter in letters for letter in word):
               is_word()
          else:
               print('Λάθος γράμματα       Απομένουν {} δεύτερα'.format(int(60 - (time.time() - start))))

# Αυτή η συνάρτηση καλείται για να ελέγξει αν η λέξη που έδωσε ο παίκτης υπάρχει στο αγγλικό λεξιλόγιο και αν υπάρχει αυξάνει τους πόντους 
def is_word():
    if Dictionary.check(word) == True:
         global score
         global multiplier
         wins.play()
         score = score + 1*multiplier
         multiplier += 1
         print('Score = {}'.format(score))
    else:
         print('Δεν υπάρχει αυτή η λέξη')
         oops.play()

# Αυτη η συνάρτηση καλείται για να σταματήσει τη λειτουργία του παιχνιδιού
def end():
    print('Τέλος παιχνιδιού')
    
# Εδώ ανάλογα με την αρχική απάντηση του παίκτη το παιχίδι είτε αρχίζει είτε σταματάει
if player_start == 1:
     begin = 1
     start=time.time()  # Ξεκινάει η μέτριση του χρόνου
     get_letters()
elif player_start == 2:
     begin = 0
     end()

    
# Αυτό το μέρος του κώδικα τρέχει καθ'όλη τη διάρκεια του παιχνιδιού
while begin == 1:
    word = input("\n")
    if word != '':                         #
         if word in old_words:             # Εδώ αν ο παίκτης γράψει κάποια λέξη ελέγχεται αν έχει ήδη δωθεί και αν όχι καλείται η συνάρτηση για τον έλεγχο της
             print('Την έχεις πει ήδη') #
         else:
             old_words.append(word)
             check_letters()
    else:                #   
        letters = []     # Εδώ αν ο παίκτης πατήσει enter χωρίς να έχει γράψει κάτι σβήνεται η λίστα με τα γράμματα και δίνεται καινούρια
        get_letters()    #
